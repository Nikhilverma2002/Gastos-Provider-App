// Generated by view binder compiler. Do not edit!
package com.cu.gastosmerchant1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatSpinner;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cu.gastosmerchant1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRequestDesignBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button basicBtn;

  @NonNull
  public final EditText brandName;

  @NonNull
  public final EditText brandTagline;

  @NonNull
  public final TextView cardTittle;

  @NonNull
  public final EditText comments;

  @NonNull
  public final EditText describeVision;

  @NonNull
  public final TextView designBalanceText;

  @NonNull
  public final AppCompatSpinner designSpinner;

  @NonNull
  public final TextView legal;

  @NonNull
  public final CardView optionCard;

  @NonNull
  public final EditText preferredColorTheme;

  @NonNull
  public final ImageView prev;

  @NonNull
  public final TextView selectDesign;

  @NonNull
  public final LinearLayout selectDesignType;

  private ActivityRequestDesignBinding(@NonNull ConstraintLayout rootView, @NonNull Button basicBtn,
      @NonNull EditText brandName, @NonNull EditText brandTagline, @NonNull TextView cardTittle,
      @NonNull EditText comments, @NonNull EditText describeVision,
      @NonNull TextView designBalanceText, @NonNull AppCompatSpinner designSpinner,
      @NonNull TextView legal, @NonNull CardView optionCard, @NonNull EditText preferredColorTheme,
      @NonNull ImageView prev, @NonNull TextView selectDesign,
      @NonNull LinearLayout selectDesignType) {
    this.rootView = rootView;
    this.basicBtn = basicBtn;
    this.brandName = brandName;
    this.brandTagline = brandTagline;
    this.cardTittle = cardTittle;
    this.comments = comments;
    this.describeVision = describeVision;
    this.designBalanceText = designBalanceText;
    this.designSpinner = designSpinner;
    this.legal = legal;
    this.optionCard = optionCard;
    this.preferredColorTheme = preferredColorTheme;
    this.prev = prev;
    this.selectDesign = selectDesign;
    this.selectDesignType = selectDesignType;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRequestDesignBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRequestDesignBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_request_design, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRequestDesignBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.basicBtn;
      Button basicBtn = ViewBindings.findChildViewById(rootView, id);
      if (basicBtn == null) {
        break missingId;
      }

      id = R.id.brand_name;
      EditText brandName = ViewBindings.findChildViewById(rootView, id);
      if (brandName == null) {
        break missingId;
      }

      id = R.id.brand_tagline;
      EditText brandTagline = ViewBindings.findChildViewById(rootView, id);
      if (brandTagline == null) {
        break missingId;
      }

      id = R.id.card_tittle;
      TextView cardTittle = ViewBindings.findChildViewById(rootView, id);
      if (cardTittle == null) {
        break missingId;
      }

      id = R.id.comments;
      EditText comments = ViewBindings.findChildViewById(rootView, id);
      if (comments == null) {
        break missingId;
      }

      id = R.id.describe_vision;
      EditText describeVision = ViewBindings.findChildViewById(rootView, id);
      if (describeVision == null) {
        break missingId;
      }

      id = R.id.design_balance_text;
      TextView designBalanceText = ViewBindings.findChildViewById(rootView, id);
      if (designBalanceText == null) {
        break missingId;
      }

      id = R.id.design_spinner;
      AppCompatSpinner designSpinner = ViewBindings.findChildViewById(rootView, id);
      if (designSpinner == null) {
        break missingId;
      }

      id = R.id.legal;
      TextView legal = ViewBindings.findChildViewById(rootView, id);
      if (legal == null) {
        break missingId;
      }

      id = R.id.option_card;
      CardView optionCard = ViewBindings.findChildViewById(rootView, id);
      if (optionCard == null) {
        break missingId;
      }

      id = R.id.preferred_color_theme;
      EditText preferredColorTheme = ViewBindings.findChildViewById(rootView, id);
      if (preferredColorTheme == null) {
        break missingId;
      }

      id = R.id.prev;
      ImageView prev = ViewBindings.findChildViewById(rootView, id);
      if (prev == null) {
        break missingId;
      }

      id = R.id.select_design;
      TextView selectDesign = ViewBindings.findChildViewById(rootView, id);
      if (selectDesign == null) {
        break missingId;
      }

      id = R.id.select_design_type;
      LinearLayout selectDesignType = ViewBindings.findChildViewById(rootView, id);
      if (selectDesignType == null) {
        break missingId;
      }

      return new ActivityRequestDesignBinding((ConstraintLayout) rootView, basicBtn, brandName,
          brandTagline, cardTittle, comments, describeVision, designBalanceText, designSpinner,
          legal, optionCard, preferredColorTheme, prev, selectDesign, selectDesignType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
