// Generated by view binder compiler. Do not edit!
package com.cu.gastosmerchant1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatSpinner;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cu.gastosmerchant1.R;
import it.sephiroth.android.library.rangeseekbar.RangeSeekBar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPostAudienceBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView AddData;

  @NonNull
  public final TextView audiAg;

  @NonNull
  public final TextView audiAge;

  @NonNull
  public final CardView cardVie3;

  @NonNull
  public final AppCompatSpinner categorySpinner;

  @NonNull
  public final AppCompatSpinner citySpinner;

  @NonNull
  public final TextView endAge;

  @NonNull
  public final TextView endValue;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView km;

  @NonNull
  public final TextView next;

  @NonNull
  public final RangeSeekBar rangeSeekBar;

  @NonNull
  public final RelativeLayout relativeLayout3;

  @NonNull
  public final ScrollView scrollView2;

  @NonNull
  public final SeekBar seekBarLuminosite;

  @NonNull
  public final LinearLayout selectCategoryLinear;

  @NonNull
  public final LinearLayout selectCityRelative;

  @NonNull
  public final TextView selectcat;

  @NonNull
  public final TextView selectcity;

  @NonNull
  public final TextView startAge;

  @NonNull
  public final TextView startValue;

  @NonNull
  public final TextView textView;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final TextView walletAmt;

  @NonNull
  public final TextView walletText;

  @NonNull
  public final TextView years;

  private ActivityPostAudienceBinding(@NonNull ConstraintLayout rootView, @NonNull TextView AddData,
      @NonNull TextView audiAg, @NonNull TextView audiAge, @NonNull CardView cardVie3,
      @NonNull AppCompatSpinner categorySpinner, @NonNull AppCompatSpinner citySpinner,
      @NonNull TextView endAge, @NonNull TextView endValue, @NonNull ImageView imageView,
      @NonNull TextView km, @NonNull TextView next, @NonNull RangeSeekBar rangeSeekBar,
      @NonNull RelativeLayout relativeLayout3, @NonNull ScrollView scrollView2,
      @NonNull SeekBar seekBarLuminosite, @NonNull LinearLayout selectCategoryLinear,
      @NonNull LinearLayout selectCityRelative, @NonNull TextView selectcat,
      @NonNull TextView selectcity, @NonNull TextView startAge, @NonNull TextView startValue,
      @NonNull TextView textView, @NonNull TextView textView5, @NonNull TextView walletAmt,
      @NonNull TextView walletText, @NonNull TextView years) {
    this.rootView = rootView;
    this.AddData = AddData;
    this.audiAg = audiAg;
    this.audiAge = audiAge;
    this.cardVie3 = cardVie3;
    this.categorySpinner = categorySpinner;
    this.citySpinner = citySpinner;
    this.endAge = endAge;
    this.endValue = endValue;
    this.imageView = imageView;
    this.km = km;
    this.next = next;
    this.rangeSeekBar = rangeSeekBar;
    this.relativeLayout3 = relativeLayout3;
    this.scrollView2 = scrollView2;
    this.seekBarLuminosite = seekBarLuminosite;
    this.selectCategoryLinear = selectCategoryLinear;
    this.selectCityRelative = selectCityRelative;
    this.selectcat = selectcat;
    this.selectcity = selectcity;
    this.startAge = startAge;
    this.startValue = startValue;
    this.textView = textView;
    this.textView5 = textView5;
    this.walletAmt = walletAmt;
    this.walletText = walletText;
    this.years = years;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPostAudienceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPostAudienceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_post_audience, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPostAudienceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Add_data;
      TextView AddData = ViewBindings.findChildViewById(rootView, id);
      if (AddData == null) {
        break missingId;
      }

      id = R.id.audi_ag;
      TextView audiAg = ViewBindings.findChildViewById(rootView, id);
      if (audiAg == null) {
        break missingId;
      }

      id = R.id.audi_age;
      TextView audiAge = ViewBindings.findChildViewById(rootView, id);
      if (audiAge == null) {
        break missingId;
      }

      id = R.id.cardVie3;
      CardView cardVie3 = ViewBindings.findChildViewById(rootView, id);
      if (cardVie3 == null) {
        break missingId;
      }

      id = R.id.category_spinner;
      AppCompatSpinner categorySpinner = ViewBindings.findChildViewById(rootView, id);
      if (categorySpinner == null) {
        break missingId;
      }

      id = R.id.city_spinner;
      AppCompatSpinner citySpinner = ViewBindings.findChildViewById(rootView, id);
      if (citySpinner == null) {
        break missingId;
      }

      id = R.id.end_age;
      TextView endAge = ViewBindings.findChildViewById(rootView, id);
      if (endAge == null) {
        break missingId;
      }

      id = R.id.end_value;
      TextView endValue = ViewBindings.findChildViewById(rootView, id);
      if (endValue == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.km;
      TextView km = ViewBindings.findChildViewById(rootView, id);
      if (km == null) {
        break missingId;
      }

      id = R.id.next;
      TextView next = ViewBindings.findChildViewById(rootView, id);
      if (next == null) {
        break missingId;
      }

      id = R.id.rangeSeekBar;
      RangeSeekBar rangeSeekBar = ViewBindings.findChildViewById(rootView, id);
      if (rangeSeekBar == null) {
        break missingId;
      }

      id = R.id.relativeLayout3;
      RelativeLayout relativeLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout3 == null) {
        break missingId;
      }

      id = R.id.scrollView2;
      ScrollView scrollView2 = ViewBindings.findChildViewById(rootView, id);
      if (scrollView2 == null) {
        break missingId;
      }

      id = R.id.seekBar_luminosite;
      SeekBar seekBarLuminosite = ViewBindings.findChildViewById(rootView, id);
      if (seekBarLuminosite == null) {
        break missingId;
      }

      id = R.id.select_category_linear;
      LinearLayout selectCategoryLinear = ViewBindings.findChildViewById(rootView, id);
      if (selectCategoryLinear == null) {
        break missingId;
      }

      id = R.id.select_city_relative;
      LinearLayout selectCityRelative = ViewBindings.findChildViewById(rootView, id);
      if (selectCityRelative == null) {
        break missingId;
      }

      id = R.id.selectcat;
      TextView selectcat = ViewBindings.findChildViewById(rootView, id);
      if (selectcat == null) {
        break missingId;
      }

      id = R.id.selectcity;
      TextView selectcity = ViewBindings.findChildViewById(rootView, id);
      if (selectcity == null) {
        break missingId;
      }

      id = R.id.start_age;
      TextView startAge = ViewBindings.findChildViewById(rootView, id);
      if (startAge == null) {
        break missingId;
      }

      id = R.id.start_value;
      TextView startValue = ViewBindings.findChildViewById(rootView, id);
      if (startValue == null) {
        break missingId;
      }

      id = R.id.textView;
      TextView textView = ViewBindings.findChildViewById(rootView, id);
      if (textView == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.wallet_amt;
      TextView walletAmt = ViewBindings.findChildViewById(rootView, id);
      if (walletAmt == null) {
        break missingId;
      }

      id = R.id.wallet_text;
      TextView walletText = ViewBindings.findChildViewById(rootView, id);
      if (walletText == null) {
        break missingId;
      }

      id = R.id.years;
      TextView years = ViewBindings.findChildViewById(rootView, id);
      if (years == null) {
        break missingId;
      }

      return new ActivityPostAudienceBinding((ConstraintLayout) rootView, AddData, audiAg, audiAge,
          cardVie3, categorySpinner, citySpinner, endAge, endValue, imageView, km, next,
          rangeSeekBar, relativeLayout3, scrollView2, seekBarLuminosite, selectCategoryLinear,
          selectCityRelative, selectcat, selectcity, startAge, startValue, textView, textView5,
          walletAmt, walletText, years);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
