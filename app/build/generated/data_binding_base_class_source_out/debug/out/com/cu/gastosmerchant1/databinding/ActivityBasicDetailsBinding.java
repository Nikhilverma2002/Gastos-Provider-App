// Generated by view binder compiler. Do not edit!
package com.cu.gastosmerchant1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatSpinner;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.cu.gastosmerchant1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import pl.droidsonroids.gif.GifImageView;

public final class ActivityBasicDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView addText;

  @NonNull
  public final EditText area;

  @NonNull
  public final Button basicBtn;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final CardView cardView16;

  @NonNull
  public final AppCompatSpinner categorySpinner;

  @NonNull
  public final AppCompatSpinner citySpinner;

  @NonNull
  public final EditText emailadress;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final TextView legal;

  @NonNull
  public final GifImageView loader;

  @NonNull
  public final EditText ownername;

  @NonNull
  public final EditText phnumber;

  @NonNull
  public final Button photoPickerbutton;

  @NonNull
  public final ImageView prev;

  @NonNull
  public final LinearLayout selectCategoryLinear;

  @NonNull
  public final LinearLayout selectCityRelative;

  @NonNull
  public final LinearLayout selectStateRelative;

  @NonNull
  public final TextView selectcat;

  @NonNull
  public final TextView selectcity;

  @NonNull
  public final TextView selectstate;

  @NonNull
  public final ImageView shopImage;

  @NonNull
  public final EditText shopaddresss;

  @NonNull
  public final TextView shopcover;

  @NonNull
  public final TextView shoploc;

  @NonNull
  public final EditText shopname;

  @NonNull
  public final AppCompatSpinner stateSpinner;

  @NonNull
  public final TextView textView6;

  @NonNull
  public final TextView textView7;

  private ActivityBasicDetailsBinding(@NonNull ConstraintLayout rootView, @NonNull TextView addText,
      @NonNull EditText area, @NonNull Button basicBtn, @NonNull CardView cardView,
      @NonNull CardView cardView16, @NonNull AppCompatSpinner categorySpinner,
      @NonNull AppCompatSpinner citySpinner, @NonNull EditText emailadress,
      @NonNull ImageView imageView3, @NonNull TextView legal, @NonNull GifImageView loader,
      @NonNull EditText ownername, @NonNull EditText phnumber, @NonNull Button photoPickerbutton,
      @NonNull ImageView prev, @NonNull LinearLayout selectCategoryLinear,
      @NonNull LinearLayout selectCityRelative, @NonNull LinearLayout selectStateRelative,
      @NonNull TextView selectcat, @NonNull TextView selectcity, @NonNull TextView selectstate,
      @NonNull ImageView shopImage, @NonNull EditText shopaddresss, @NonNull TextView shopcover,
      @NonNull TextView shoploc, @NonNull EditText shopname, @NonNull AppCompatSpinner stateSpinner,
      @NonNull TextView textView6, @NonNull TextView textView7) {
    this.rootView = rootView;
    this.addText = addText;
    this.area = area;
    this.basicBtn = basicBtn;
    this.cardView = cardView;
    this.cardView16 = cardView16;
    this.categorySpinner = categorySpinner;
    this.citySpinner = citySpinner;
    this.emailadress = emailadress;
    this.imageView3 = imageView3;
    this.legal = legal;
    this.loader = loader;
    this.ownername = ownername;
    this.phnumber = phnumber;
    this.photoPickerbutton = photoPickerbutton;
    this.prev = prev;
    this.selectCategoryLinear = selectCategoryLinear;
    this.selectCityRelative = selectCityRelative;
    this.selectStateRelative = selectStateRelative;
    this.selectcat = selectcat;
    this.selectcity = selectcity;
    this.selectstate = selectstate;
    this.shopImage = shopImage;
    this.shopaddresss = shopaddresss;
    this.shopcover = shopcover;
    this.shoploc = shoploc;
    this.shopname = shopname;
    this.stateSpinner = stateSpinner;
    this.textView6 = textView6;
    this.textView7 = textView7;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBasicDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBasicDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_basic_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBasicDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_text;
      TextView addText = ViewBindings.findChildViewById(rootView, id);
      if (addText == null) {
        break missingId;
      }

      id = R.id.area;
      EditText area = ViewBindings.findChildViewById(rootView, id);
      if (area == null) {
        break missingId;
      }

      id = R.id.basicBtn;
      Button basicBtn = ViewBindings.findChildViewById(rootView, id);
      if (basicBtn == null) {
        break missingId;
      }

      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.cardView16;
      CardView cardView16 = ViewBindings.findChildViewById(rootView, id);
      if (cardView16 == null) {
        break missingId;
      }

      id = R.id.category_spinner;
      AppCompatSpinner categorySpinner = ViewBindings.findChildViewById(rootView, id);
      if (categorySpinner == null) {
        break missingId;
      }

      id = R.id.city_spinner;
      AppCompatSpinner citySpinner = ViewBindings.findChildViewById(rootView, id);
      if (citySpinner == null) {
        break missingId;
      }

      id = R.id.emailadress;
      EditText emailadress = ViewBindings.findChildViewById(rootView, id);
      if (emailadress == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.legal;
      TextView legal = ViewBindings.findChildViewById(rootView, id);
      if (legal == null) {
        break missingId;
      }

      id = R.id.loader;
      GifImageView loader = ViewBindings.findChildViewById(rootView, id);
      if (loader == null) {
        break missingId;
      }

      id = R.id.ownername;
      EditText ownername = ViewBindings.findChildViewById(rootView, id);
      if (ownername == null) {
        break missingId;
      }

      id = R.id.phnumber;
      EditText phnumber = ViewBindings.findChildViewById(rootView, id);
      if (phnumber == null) {
        break missingId;
      }

      id = R.id.photoPickerbutton;
      Button photoPickerbutton = ViewBindings.findChildViewById(rootView, id);
      if (photoPickerbutton == null) {
        break missingId;
      }

      id = R.id.prev;
      ImageView prev = ViewBindings.findChildViewById(rootView, id);
      if (prev == null) {
        break missingId;
      }

      id = R.id.select_category_linear;
      LinearLayout selectCategoryLinear = ViewBindings.findChildViewById(rootView, id);
      if (selectCategoryLinear == null) {
        break missingId;
      }

      id = R.id.select_city_relative;
      LinearLayout selectCityRelative = ViewBindings.findChildViewById(rootView, id);
      if (selectCityRelative == null) {
        break missingId;
      }

      id = R.id.select_state_relative;
      LinearLayout selectStateRelative = ViewBindings.findChildViewById(rootView, id);
      if (selectStateRelative == null) {
        break missingId;
      }

      id = R.id.selectcat;
      TextView selectcat = ViewBindings.findChildViewById(rootView, id);
      if (selectcat == null) {
        break missingId;
      }

      id = R.id.selectcity;
      TextView selectcity = ViewBindings.findChildViewById(rootView, id);
      if (selectcity == null) {
        break missingId;
      }

      id = R.id.selectstate;
      TextView selectstate = ViewBindings.findChildViewById(rootView, id);
      if (selectstate == null) {
        break missingId;
      }

      id = R.id.shopImage;
      ImageView shopImage = ViewBindings.findChildViewById(rootView, id);
      if (shopImage == null) {
        break missingId;
      }

      id = R.id.shopaddresss;
      EditText shopaddresss = ViewBindings.findChildViewById(rootView, id);
      if (shopaddresss == null) {
        break missingId;
      }

      id = R.id.shopcover;
      TextView shopcover = ViewBindings.findChildViewById(rootView, id);
      if (shopcover == null) {
        break missingId;
      }

      id = R.id.shoploc;
      TextView shoploc = ViewBindings.findChildViewById(rootView, id);
      if (shoploc == null) {
        break missingId;
      }

      id = R.id.shopname;
      EditText shopname = ViewBindings.findChildViewById(rootView, id);
      if (shopname == null) {
        break missingId;
      }

      id = R.id.state_spinner;
      AppCompatSpinner stateSpinner = ViewBindings.findChildViewById(rootView, id);
      if (stateSpinner == null) {
        break missingId;
      }

      id = R.id.textView6;
      TextView textView6 = ViewBindings.findChildViewById(rootView, id);
      if (textView6 == null) {
        break missingId;
      }

      id = R.id.textView7;
      TextView textView7 = ViewBindings.findChildViewById(rootView, id);
      if (textView7 == null) {
        break missingId;
      }

      return new ActivityBasicDetailsBinding((ConstraintLayout) rootView, addText, area, basicBtn,
          cardView, cardView16, categorySpinner, citySpinner, emailadress, imageView3, legal,
          loader, ownername, phnumber, photoPickerbutton, prev, selectCategoryLinear,
          selectCityRelative, selectStateRelative, selectcat, selectcity, selectstate, shopImage,
          shopaddresss, shopcover, shoploc, shopname, stateSpinner, textView6, textView7);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
